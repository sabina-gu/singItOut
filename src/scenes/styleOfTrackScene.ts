import { Markup, Scenes } from "telegraf";
import { MyContext } from "../../index";
import { Style } from "../constants";
import {deletePreviousMessage} from "../utils/deletePreviousMessage";
import asyncWrapper from "../utils/error-handler";
import {handleStartCommand} from "../utils/handleStartCommand";
import {handleTextWithReplyForChoosingButton} from "../utils/handleTextWithReplyForChoosingButton";
import {BaseScene} from "telegraf/typings/scenes";

async function sendStyleButtons(ctx: MyContext):Promise<void> {
    const sentMessage = await ctx.reply(
        '–ö–∞–∫–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ —Ç—ã —Ö–æ—á–µ—à—å –ø–µ—Ä–µ–¥–∞—Ç—å –≤ —Ç—Ä–µ–∫–µ? üé∂',
        Markup.inlineKeyboard([
            [Markup.button.callback('–í–µ—Å–µ–ª–æ–µ –∏ —ç–Ω–µ—Ä–≥–∏—á–Ω–æ–µ üòÑüéâ', Style.joy)],
            [Markup.button.callback('–†–æ–º–∞–Ω—Ç–∏—á–Ω–æ–µ –∏ –Ω–µ–∂–Ω–æ–µ üíï', Style.romantic)],
            [Markup.button.callback('–°–µ—Ä—å–µ–∑–Ω–æ–µ –∏ –≥–ª—É–±–æ–∫–æ–µ üåä', Style.serious)],
            [Markup.button.callback('–ù–æ—Å—Ç–∞–ª—å–≥–∏—á–µ—Å–∫–æ–µ üí≠', Style.nostalgic)],
            [Markup.button.callback('–°–ø–æ–∫–æ–π–Ω–æ–µ –∏ —Ä–∞—Å—Å–ª–∞–±–ª—è—é—â–µ–µ üßò‚Äç‚ôÇÔ∏è', Style.calm)]
        ])
    );
    ctx.session.messageToDelete = sentMessage.message_id;
}


const styleOfTrackScene:BaseScene<MyContext> = new Scenes.BaseScene<MyContext>('styleOfTrackScene');

styleOfTrackScene.enter(asyncWrapper(async (ctx:MyContext):Promise<void> => {
    await sendStyleButtons(ctx);
}));

styleOfTrackScene.command("start", asyncWrapper(handleStartCommand));


styleOfTrackScene.on('text', handleTextWithReplyForChoosingButton("styleOfTrackScene"));

styleOfTrackScene.command("start", asyncWrapper(handleStartCommand));


styleOfTrackScene.on('callback_query', asyncWrapper(async (ctx:MyContext):Promise<void> => {
    await deletePreviousMessage(ctx);

    const style:string = 'data' in ctx.callbackQuery ? (ctx.callbackQuery?.data as string) : "";
    ctx.session.styleOfTrack = style || '';

    await ctx.scene.enter('includedPhrasesWizardScene');

}));


styleOfTrackScene.command("start", asyncWrapper(handleStartCommand));



export default styleOfTrackScene;

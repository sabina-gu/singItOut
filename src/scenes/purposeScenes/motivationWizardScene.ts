import {Scenes} from "telegraf";
import {MyContext} from "../../../index";
import asyncWrapper from "../../utils/error-handler";
import {handleStartCommand} from "../../utils/handleStartCommand";
import {WizardScene} from "telegraf/typings/scenes";


const motivationWizardScene:WizardScene<MyContext> = new Scenes.WizardScene<MyContext>(
    'motivationWizardScene',


    asyncWrapper(async (ctx: MyContext):Promise<void> => {
        await ctx.reply('Ð’ Ñ‡ÐµÐ¼ Ð¸Ð¼ÐµÐ½Ð½Ð¾ Ñ‚Ñ‹ Ñ…Ð¾Ñ‡ÐµÑˆÑŒ Ð¿Ð¾Ð´Ð´ÐµÑ€Ð¶Ð°Ñ‚ÑŒ Ð¸Ð»Ð¸ Ð½Ð° Ñ‡Ñ‚Ð¾ Ð²Ð´Ð¾Ñ…Ð½Ð¾Ð²Ð¸Ñ‚ÑŒ Ñ‡ÐµÐ»Ð¾Ð²ÐµÐºÐ°? ðŸ’ª');
        await ctx.wizard.next();
    }),

    asyncWrapper(async (ctx: MyContext):Promise<void> => {
        const userMotivationReason: string= 'text' in ctx.message ? ctx.message.text : '';
        ctx.session.subPurpose = userMotivationReason;
        await ctx.scene.enter('recipientStatusScene');
    })
);

motivationWizardScene.command("start", asyncWrapper(handleStartCommand));


export default motivationWizardScene;

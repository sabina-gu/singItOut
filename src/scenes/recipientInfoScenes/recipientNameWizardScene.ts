import { Scenes } from "telegraf";
import { MyContext } from "../../../index";
import asyncWrapper from "../../utils/error-handler";
import {WizardScene} from "telegraf/typings/scenes";
import {handleStartCommand} from "../../utils/handleStartCommand";
import mainScene from "../mainScene";


const recipientNameWizardScene:WizardScene<MyContext> = new Scenes.WizardScene<MyContext>(
    'recipientNameWizardScene',
    asyncWrapper(async (ctx: MyContext):Promise<void> => {
        await ctx.reply('–ö–∞–∫ –∑–æ–≤—É—Ç —á–µ–ª–æ–≤–µ–∫–∞, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ —Ç—ã —Ö–æ—á–µ—à—å —Å–æ–∑–¥–∞—Ç—å —Ç—Ä–µ–∫? üìù');
        await ctx.wizard.next();
    }),

    asyncWrapper(async (ctx: MyContext):Promise<void> => {
        ctx.session.nameOfRecipient = 'text' in ctx.message ? ctx.message.text : '';
        await ctx.reply("–ï—Å—Ç—å –ª–∏ —á—Ç–æ-—Ç–æ –≤–∞–∂–Ω–æ–µ, —á—Ç–æ –Ω—É–∂–Ω–æ —É—á–µ—Å—Ç—å –ø—Ä–æ —ç—Ç–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞? üßê (—á–µ—Ä—Ç—ã —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞, —É–≤–ª–µ—á–µ–Ω–∏—è, –ø—Ä–æ—Ñ–µ—Å—Å–∏—è)");
        await ctx.wizard.next();
    }),

    asyncWrapper(async (ctx: MyContext):Promise<void> => {
        ctx.session.recipientDescription = 'text' in ctx.message ? ctx.message.text : '';
        await ctx.scene.enter('styleOfTrackScene');
    })
);

recipientNameWizardScene.command("start", asyncWrapper(handleStartCommand));


export default recipientNameWizardScene;
